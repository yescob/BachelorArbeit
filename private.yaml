version: '3.5'

services:

  jaeger:
    image: jaegertracing/all-in-one:latest
    ports:
      - "5775:5775/udp"
      - "6831:6831/udp"
      - "6832:6832/udp"
      - "5778:5778"
      - "16686:16686"
      - "14268:14268"
    networks:
      - j-network

  zookeeper:
    image: quay.io/strimzi/kafka:0.23.0-kafka-2.8.0
    command: [
      "sh", "-c",
      "bin/zookeeper-server-start.sh config/zookeeper.properties"
    ]
    ports:
      - "2181:2181"
    environment:
      LOG_DIR: /tmp/logs
    networks:
      - j-network

  kafka:
    image: quay.io/strimzi/kafka:0.23.0-kafka-2.8.0
    command: [
      "sh", "-c",
      "bin/kafka-server-start.sh config/server.properties --override listeners=$${KAFKA_LISTENERS} --override advertised.listeners=$${KAFKA_ADVERTISED_LISTENERS} --override zookeeper.connect=$${KAFKA_ZOOKEEPER_CONNECT}"
    ]
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      LOG_DIR: "/tmp/logs"
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    networks:
      - j-network

  postgres:
    image: "postgres:10.5"
    mem_limit: 128m
    environment:
      - POSTGRES_USER=jfe7727
      - POSTGRES_PASSWORD=jfe7727
      - POSTGRES_DB=quarkus-movie
    ports:
      - "5432:5432"
    networks:
      - j-network

  postgres-micro:
    image: "postgres:10.5"
    mem_limit: 128m
    environment:
      - POSTGRES_USER=jfe7727
      - POSTGRES_PASSWORD=jfe7727
      - POSTGRES_DB=micro-movie
    ports:
      - "5434:5432"
    networks:
      - j-network

  mongodb:
    container_name: mongodb
    image: mongo:4.0
    ports:
      - "27017:27017"
    networks:
      - j-network

  mongodb-micro:
    container_name: mongodb-micro
    image: mongo:4.0
    ports:
      - "27018:27017"
    networks:
      - j-network

  quarkus-movie:
    container_name: quarkus-movie
    image: quarkus/quarkus-movie-jvm
    depends_on:
      - kafka
      - postgres
    environment:
      JAEGER_AGENT_HOST: jaeger
      JAEGER_AGENT_PORT: 6831
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      NOT_FOUND_ERROR_MESSAGE : This movie does not exists
    ports:
      - "8080:8080"
    networks:
      - j-network
    
  quarkus-person:
    container_name: quarkus-person
    image: quarkus/quarkus-person-jvm
    depends_on:
      - kafka
      - mongodb
    environment:
      JAEGER_AGENT_HOST: jaeger
      JAEGER_AGENT_PORT: 6831
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    ports:
      - "8081:8081"
    networks:
      - j-network
    
  quarkus-service:
    container_name: quarkus-service
    image: quarkus/quarkus-service-jvm
    ports:
      - "8082:8082"
    environment:
      JAEGER_AGENT_HOST: jaeger
      JAEGER_AGENT_PORT: 6831
      QUARKUS_REST_CLIENT_MOVIE_API_URL: http://quarkus-movie:8080
      QUARKUS_REST_CLIENT_PERSON_API_URL: http://quarkus-person:8081
    networks:
      - j-network

  micro-movie:
    container_name: micro-movie
    image: micro/micro-movie
    depends_on:
      - kafka
      - postgres-micro
    ports:
      - "8083:8083"
    environment:
      JAEGER_SERVICE_NAME: micro-movie
      JAEGER_AGENT_HOST: jaeger
      NOT_FOUND_ERROR_MESSAGE : This movie does not exists
      KAFKA_BOOTSTRAP: kafka:9092
    networks:
      - j-network

  micro-person:
    container_name: micro-person
    image: micro/micro-person
    depends_on:
      - kafka
      - mongodb-micro
    environment:
      JAEGER_SERVICE_NAME: micro-person
      JAEGER_AGENT_HOST: jaeger
    ports:
      - "8084:8084"
    networks:
      - j-network

  micro-service:
    container_name: micro-serivce
    image: micro/micro-service
    ports:
      - "8085:8085"
    environment:
      JAEGER_SERVICE_NAME: micro-serivce
      JAEGER_AGENT_HOST: jaeger
      MOVIE_API_MP_REST_URL: http://micro-movie:8083
      PERSON_API_MP_REST_URL: http://micro-person:8084
    networks:
      - j-network

networks:
  j-network:
    name: jn